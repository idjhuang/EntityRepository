<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="School" targetNamespace="http://tempuri.org/School.xsd" xmlns:mstns="http://tempuri.org/School.xsd" xmlns="http://tempuri.org/School.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EntityRepositoryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EntityRepositoryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SchoolModels.Properties.Settings.GlobalReference.Default.EntityRepositoryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeacherTableAdapter" GeneratorDataComponentClassName="TeacherTableAdapter" Name="Teacher" UserDataComponentName="TeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Teacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teacher] WHERE (([TeacherId] = @Original_TeacherId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teacher] ([TeacherId], [Name]) VALUES (@TeacherId, @Name);
SELECT TeacherId, Name FROM Teacher WHERE (TeacherId = @TeacherId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeacherId, Name FROM dbo.Teacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teacher] SET [TeacherId] = @TeacherId, [Name] = @Name WHERE (([TeacherId] = @Original_TeacherId) AND ([Name] = @Original_Name));
SELECT TeacherId, Name FROM Teacher WHERE (TeacherId = @TeacherId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeacherId" DataSetColumn="TeacherId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AddData" Modifier="Public" Name="AddData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AddData">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>IF (SELECT COUNT (*) FROM Teacher WHERE TeacherId = @TeacherId) &gt; 0
    UPDATE Teacher SET Name = @Name WHERE TeacherId = @TeacherId;
ELSE
    INSERT INTO Teacher VALUES (@TeacherId, @Name);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteData" Modifier="Public" Name="DeleteData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Teacher WHERE TeacherId = @Id</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="TeacherId" DataSourceName="EntityRepository.dbo.Teacher" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Teacher" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataById" GetMethodModifier="Public" GetMethodName="GetDataById" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataById" UserSourceName="GetDataById">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT TeacherId, Name FROM dbo.Teacher WHERE TeacherId = @Id</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="TeacherId" DataSourceName="EntityRepository.dbo.Teacher" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTableAdapter" GeneratorDataComponentClassName="CourseTableAdapter" Name="Course" UserDataComponentName="CourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Course] WHERE (([CourseNo] = @Original_CourseNo) AND ([CourseName] = @Original_CourseName) AND ([Teacher] = @Original_Teacher) AND ([Capacity] = @Original_Capacity) AND ([Point] = @Original_Point))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Point" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Point" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Course] ([CourseNo], [CourseName], [Teacher], [Capacity], [Point]) VALUES (@CourseNo, @CourseName, @Teacher, @Capacity, @Point);
SELECT CourseNo, CourseName, Teacher, Capacity, Point FROM Course WHERE (CourseNo = @CourseNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Point" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Point" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM dbo.Course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Course] SET [CourseNo] = @CourseNo, [CourseName] = @CourseName, [Teacher] = @Teacher, [Capacity] = @Capacity, [Point] = @Point WHERE (([CourseNo] = @Original_CourseNo) AND ([CourseName] = @Original_CourseName) AND ([Teacher] = @Original_Teacher) AND ([Capacity] = @Original_Capacity) AND ([Point] = @Original_Point));
SELECT CourseNo, CourseName, Teacher, Capacity, Point FROM Course WHERE (CourseNo = @CourseNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Point" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Point" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Teacher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Point" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Point" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseNo" DataSetColumn="CourseNo" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
              <Mapping SourceColumn="Teacher" DataSetColumn="Teacher" />
              <Mapping SourceColumn="Capacity" DataSetColumn="Capacity" />
              <Mapping SourceColumn="Point" DataSetColumn="Point" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AddData" Modifier="Public" Name="AddData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AddData">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>IF (SELECT COUNT (*) FROM Course WHERE CourseNo = @CourseNo) &gt; 0
    UPDATE Course SET CourseName = @CourseName, Teacher = @TeacherId, Capacity = @Capacity, Point = @Point WHERE CourseNo = @CourseNo;
ELSE
    INSERT INTO Course VALUES (@CourseNo, @CourseName, @TeacherId, @Capacity, @Point);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Point" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Point" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteData" Modifier="Public" Name="DeleteData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Course
WHERE          (CourseNo = @CourseNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseNo" ColumnName="CourseNo" DataSourceName="EntityRepository.dbo.Course" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Course" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCourseNo" GetMethodModifier="Public" GetMethodName="GetDataByCourseNo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCourseNo" UserSourceName="GetDataByCourseNo">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Capacity, CourseName, CourseNo, Point, Teacher FROM Course WHERE (CourseNo = @CourseNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseNo" ColumnName="CourseNo" DataSourceName="EntityRepository.dbo.Course" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Course" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByTeacherId" GetMethodModifier="Public" GetMethodName="GetDataByTeacherId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByTeacherId" UserSourceName="GetDataByTeacherId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Capacity, CourseName, CourseNo, Point, Teacher FROM Course WHERE (Teacher = @TeacherId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="TeacherId" ColumnName="Teacher" DataSourceName="EntityRepository.dbo.Course" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="Teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([StudentId] = @Original_StudentId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([StudentId], [Name]) VALUES (@StudentId, @Name);
SELECT StudentId, Name FROM Student WHERE (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentId, Name FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [StudentId] = @StudentId, [Name] = @Name WHERE (([StudentId] = @Original_StudentId) AND ([Name] = @Original_Name));
SELECT StudentId, Name FROM Student WHERE (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AddData" Modifier="Public" Name="AddData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AddData">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>IF (SELECT COUNT (*) FROM Student WHERE StudentId = @StudentId) &gt; 0
    UPDATE Student SET Name = @Name WHERE StudentId = @StudentId;
ELSE
    INSERT INTO Student VALUES (@StudentId, @Name);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteData" Modifier="Public" Name="DeleteData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Student WHERE StudentId = @StudentId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="StudentId" DataSourceName="EntityRepository.dbo.Student" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Student" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataById" GetMethodModifier="Public" GetMethodName="GetDataById" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataById" UserSourceName="GetDataById">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT StudentId, Name FROM dbo.Student WHERE StudentId = @Id</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="StudentId" DataSourceName="EntityRepository.dbo.Student" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScoreTableAdapter" GeneratorDataComponentClassName="ScoreTableAdapter" Name="Score" UserDataComponentName="ScoreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Score" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT          CourseNo, StudentId, FinalScore
FROM              Score</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="FinalScore" DataSetColumn="FinalScore" />
              <Mapping SourceColumn="CourseNo" DataSetColumn="CourseNo" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AddData" Modifier="Public" Name="AddData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AddData">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>IF (SELECT COUNT (*) FROM Score WHERE CourseNo = @CourseNo AND StudentId = @StudentId) &gt; 0
    UPDATE Score SET FinalScore = @FinalScore;
ELSE
    INSERT INTO Score VALUES (@CourseNo, @StudentId, @FinalScore);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@FinalScore" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalScore" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteData" Modifier="Public" Name="DeleteData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Score WHERE CourseNo = @CourseNo AND StudentId = @StudentId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseNo" ColumnName="CourseNo" DataSourceName="EntityRepository.dbo.Score" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="StudentId" DataSourceName="EntityRepository.dbo.Score" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Score" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCourseNo" GetMethodModifier="Public" GetMethodName="GetDataByCourseNo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCourseNo" UserSourceName="GetDataByCourseNo">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT CourseNo, FinalScore, StudentId FROM Score WHERE (CourseNo = @CourseNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseNo" ColumnName="CourseNo" DataSourceName="EntityRepository.dbo.Score" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Score" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCourseNoAndStudentId" GetMethodModifier="Public" GetMethodName="GetDataByCourseNoAndStudentId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCourseNoAndStudentId" UserSourceName="GetDataByCourseNoAndStudentId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT CourseNo, FinalScore, StudentId FROM Score WHERE (CourseNo = @CourseNo) AND (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseNo" ColumnName="CourseNo" DataSourceName="EntityRepository.dbo.Score" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@CourseNo" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="CourseNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="StudentId" DataSourceName="EntityRepository.dbo.Score" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EntityRepositoryConnectionString (Settings)" DbObjectName="EntityRepository.dbo.Score" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByStudentId" GetMethodModifier="Public" GetMethodName="GetDataByStudentId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByStudentId" UserSourceName="GetDataByStudentId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT CourseNo, FinalScore, StudentId FROM Score WHERE (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="StudentId" DataSourceName="EntityRepository.dbo.Score" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="School" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="School" msprop:Generator_UserDSName="School">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Teacher" msprop:Generator_TableClassName="TeacherDataTable" msprop:Generator_TableVarName="tableTeacher" msprop:Generator_TablePropName="Teacher" msprop:Generator_RowDeletingName="TeacherRowDeleting" msprop:Generator_RowChangingName="TeacherRowChanging" msprop:Generator_RowEvHandlerName="TeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="TeacherRowDeleted" msprop:Generator_UserTableName="Teacher" msprop:Generator_RowChangedName="TeacherRowChanged" msprop:Generator_RowEvArgName="TeacherRowChangeEvent" msprop:Generator_RowClassName="TeacherRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeacherId" msprop:Generator_ColumnVarNameInTable="columnTeacherId" msprop:Generator_ColumnPropNameInRow="TeacherId" msprop:Generator_ColumnPropNameInTable="TeacherIdColumn" msprop:Generator_UserColumnName="TeacherId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Course" msprop:Generator_TableClassName="CourseDataTable" msprop:Generator_TableVarName="tableCourse" msprop:Generator_TablePropName="Course" msprop:Generator_RowDeletingName="CourseRowDeleting" msprop:Generator_RowChangingName="CourseRowChanging" msprop:Generator_RowEvHandlerName="CourseRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseRowDeleted" msprop:Generator_UserTableName="Course" msprop:Generator_RowChangedName="CourseRowChanged" msprop:Generator_RowEvArgName="CourseRowChangeEvent" msprop:Generator_RowClassName="CourseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CourseNo" msprop:Generator_ColumnVarNameInTable="columnCourseNo" msprop:Generator_ColumnPropNameInRow="CourseNo" msprop:Generator_ColumnPropNameInTable="CourseNoColumn" msprop:Generator_UserColumnName="CourseNo">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Teacher" msprop:nullValue="_null" msprop:Generator_ColumnPropNameInRow="Teacher" msprop:Generator_ColumnVarNameInTable="columnTeacher" msprop:Generator_ColumnPropNameInTable="TeacherColumn" msprop:Generator_UserColumnName="Teacher" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Capacity" msprop:Generator_ColumnVarNameInTable="columnCapacity" msprop:Generator_ColumnPropNameInRow="Capacity" msprop:Generator_ColumnPropNameInTable="CapacityColumn" msprop:Generator_UserColumnName="Capacity" type="xs:int" />
              <xs:element name="Point" msprop:Generator_ColumnVarNameInTable="columnPoint" msprop:Generator_ColumnPropNameInRow="Point" msprop:Generator_ColumnPropNameInTable="PointColumn" msprop:Generator_UserColumnName="Point" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent" msprop:Generator_TablePropName="Student" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_UserTableName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_RowClassName="StudentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentId" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_UserColumnName="StudentId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Score" msprop:Generator_TableClassName="ScoreDataTable" msprop:Generator_TableVarName="tableScore" msprop:Generator_TablePropName="Score" msprop:Generator_RowDeletingName="ScoreRowDeleting" msprop:Generator_RowChangingName="ScoreRowChanging" msprop:Generator_RowEvHandlerName="ScoreRowChangeEventHandler" msprop:Generator_RowDeletedName="ScoreRowDeleted" msprop:Generator_UserTableName="Score" msprop:Generator_RowChangedName="ScoreRowChanged" msprop:Generator_RowEvArgName="ScoreRowChangeEvent" msprop:Generator_RowClassName="ScoreRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentId" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_UserColumnName="StudentId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FinalScore" msprop:Generator_ColumnVarNameInTable="columnFinalScore" msprop:Generator_ColumnPropNameInRow="FinalScore" msprop:Generator_ColumnPropNameInTable="FinalScoreColumn" msprop:Generator_UserColumnName="FinalScore" type="xs:int" />
              <xs:element name="CourseNo" msprop:Generator_ColumnVarNameInTable="columnCourseNo" msprop:Generator_ColumnPropNameInRow="CourseNo" msprop:Generator_ColumnPropNameInTable="CourseNoColumn" msprop:Generator_UserColumnName="CourseNo">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teacher" />
      <xs:field xpath="mstns:TeacherId" />
    </xs:unique>
    <xs:unique name="Course_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course" />
      <xs:field xpath="mstns:CourseNo" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:StudentId" />
    </xs:unique>
    <xs:unique name="Score_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Score" />
      <xs:field xpath="mstns:CourseNo" />
      <xs:field xpath="mstns:StudentId" />
    </xs:unique>
  </xs:element>
</xs:schema>